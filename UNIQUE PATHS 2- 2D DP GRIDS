// OBSTACKLE HAS VALUE -1 AND RETURN THE ANSWER WITH MODULO OF 1E9+7

// CONTINUATION OF UNIQUE PATHS




//---------------------------------RECURSION------------------------------------------//
//------TC=O(2^(N+M))----SC=O(N+M)--------------------------//
#include <bits/stdc++.h>
// yashpal
#define ll long long
#define mod 1000000007
#define input                  \
    for (ll i = 0; i < n; i++) \
    {                          \
        ll x;                  \
        cin >> x;              \
        v.push_back(x);        \
    }
    
using namespace std;
ll f(ll i, ll j, vector<vector<ll>> &v)
{
    if (i == 0 && j == 0)
    {
        return 1;
    }
    if (i < 0 || j < 0)
    {
        return 0;
    }

    if (v[i][j] == -1)
    {
        return 0;
    }
    ll left = f(i - 1, j, v);
    ll right = f(i, j - 1, v);
    return (left + right) % mod;
}
signed main()
{

    ll n, m;
    cin >> n >> m;
    vector<vector<ll>> v(n, vector<ll>(m, 0));
    for (ll i = 0; i < n; i++)
    {
        for (ll j = 0; j < m; j++)
        {
            ll x;
            cin >> x;
            v[i][j] = x;
        }
    }
    cout << f(n - 1, m - 1, v) << endl;

    return 0;
}

//---------------------------------------MEMOIZATION------------------------------------------------------//
//---------------------TC=O(N*M)---------------------------SC=O(N*M)+O(N+M)-------------//

#include <bits/stdc++.h>
// yashpal
#define ll long long
#define mod 1000000007
#define input                  \
    for (ll i = 0; i < n; i++) \
    {                          \
        ll x;                  \
        cin >> x;              \
        v.push_back(x);        \
    }

using namespace std;
ll f(ll i, ll j, vector<vector<ll>> &v,vector<vector<ll>>&dp)
{
    if (i == 0 && j == 0)
    {
        return 1;
    }
    if (i < 0 || j < 0)
    {
        return 0;
    }
    if(dp[i][j]!=-2){
        return dp[i][j];
    }

    if (v[i][j] == -1)
    {
        return 0;
    }
    ll left = f(i - 1, j, v,dp);
    ll right = f(i, j - 1, v,dp);
    return dp[i][j]=(left + right) % mod;
}
signed main()
{

    ll n, m;
    cin >> n >> m;
    vector<vector<ll>> v(n, vector<ll>(m, 0));
    vector<vector<ll>> dp(n, vector<ll>(m, -2));
    for (ll i = 0; i < n; i++)
    {
        for (ll j = 0; j < m; j++)
        {
            ll x;
            cin >> x;
            v[i][j] = x;
        }
    }
    cout << f(n - 1, m - 1, v,dp) << endl;

    return 0;
}


//--------------------------------------TABULATION----------------------------------//
//-----TC=O(N*M)--------O(N*M)-----------------------------------//

#include <bits/stdc++.h>
// yashpal
#define ll long long
#define mod 1000000007
#define input                  \
    for (ll i = 0; i < n; i++) \
    {                          \
        ll x;                  \
        cin >> x;              \
        v.push_back(x);        \
    }

using namespace std;
ll f(ll i, ll j, vector<vector<ll>> &v,vector<vector<ll>>&dp)
{
    if (i == 0 && j == 0)
    {
        return 1;
    }
    if (i < 0 || j < 0)
    {
        return 0;
    }
    if(dp[i][j]!=-2){
        return dp[i][j];
    }

    if (v[i][j] == -1)
    {
        return 0;
    }
    ll left = f(i - 1, j, v,dp);
    ll right = f(i, j - 1, v,dp);
    return dp[i][j]=(left + right) % mod;
}
signed main()
{

    ll n, m;
    cin >> n >> m;
    vector<vector<ll>> v(n, vector<ll>(m, 0));
    vector<vector<ll>> dp(n, vector<ll>(m, 1));
    for (ll i = 0; i < n; i++)
    {
        for (ll j = 0; j < m; j++)
        {
            ll x;
            cin >> x;
            v[i][j] = x;
        }
    }
for(ll i=0;i<n;i++){
    for(ll j=0;j<m;j++){
        if(v[i][j]==-1){
dp[i][j]=0;
        }
        else if(i==0&&j==0){
            dp[i][j]=1;
        }
        else{
            ll up=0,left=0;
            if(i>0){
                up=dp[i-1][j];
            }
            if(j>0){
                left=dp[i][j-1];
            }
            dp[i][j]=(up+left)%mod;
        }
    }
}
cout<<dp[n-1][m-1]<<endl;

    return 0;
}














































