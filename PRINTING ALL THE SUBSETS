//TIME COMPLEXITYV-------O(2^N * N)
//SPACE COMPLEXITY------O(N) RECURSION STACK MEMORY

#include<bits/stdc++.h>
//yashpal
#define ll long long
#define input for(int i=0;i<n;i++){int x;cin>>x;v.push_back(x);}
using namespace std;

void f(int idx,vector<int>&v,vector<int>&ds,vector<vector<int>>&p){
if(idx==v.size()){
//  tab jab koi vector return krna ho
 p.push_back(ds);

    for(auto &i:ds){
  cout<<i<<" ";
    }
    if(ds.size()==0){
      cout<<"{}"<<endl;
    }
    cout<<endl;
    return;
}

ds.push_back(v[idx]);

f(idx+1,v,ds,p);// TAKE

ds.pop_back();

f(idx+1,v,ds,p);//NOT TAKE

}

int main()
{
ios_base :: sync_with_stdio(false);
cin.tie(NULL);
cout.tie(NULL);
    int n;cin>>n;
    vector<int>v;input;
vector<int>ds;
vector<vector<int>>p;

//void return
f(0,v,ds,p);


// jab vector ko use krenge
 cout<<p.size()<<endl;
//    for(int i=0;i<p.size();i++){
//        for(int j=0;j<p[0].size();j++){
//            cout<<p[i][j]<<" ";
//        }
//        cout<<endl;
//    }

    return 0;
}
