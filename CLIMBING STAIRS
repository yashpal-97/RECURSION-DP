/* You have been given a number of stairs. Initially, you are at the 0th stair, and you need to reach the Nth stair.
Each time you can either take one step or two step.
RETURN TOTAL NUMBER OF DISTINCT WAYS TO REACH O TO N  */

//--------------------------------------------RECURSION------------------------------------------------------
/* TIME COMPLEXITY== O(2^N)-------SPACE COMPLEXITY==O(N)-------------
#include<bits/stdc++.h>
//yashpal
#define ll long long
#define input for(int i=0;i<z;i++){int x;cin>>x;v.push_back(x);}
using namespace std;
int f(ll n){
    if(n==0||n==1){
        return 1;
    }
    ll onestep=f(n-1);
    ll twostep=f(n-2);
    return (onestep+twostep)%1000000007;
}

int main()
{
ll n;cin>>n;
cout<<f(n)<<endl;
    
    return 0;
}
*/


//-------------------------------------------MEMOIZATION----------------------------------------------------------------//
/*
----------------TIME COMPLEXITY==O(N)-------------SPACE COMPLEXITY==O(N)-----------------------------
#include<bits/stdc++.h>
//yashpal
#define ll long long
#define input for(int i=0;i<z;i++){int x;cin>>x;v.push_back(x);}
using namespace std;
ll f(ll n,vector<ll>&dp){
    if(n==0||n==1){
        return 1;
    }
    if(dp[n]!=-1){
        return dp[n];
    }
    ll onestep=f(n-1,dp);
    ll twostep=f(n-2,dp);
    return dp[n]=(onestep+twostep)%1000000007;
}

int main()
{
ll n;cin>>n;
vector<ll>dp(n+1,-1);
cout<<f(n,dp)<<endl;
    
    return 0;
}

*/

//----------------------------------------------TABULATION---------------------------------------//
/*---------------------------TIME COMPLEXITY==O(N)--------SPACE COMPLEXITY==O(N)------------------
#include<bits/stdc++.h>
//yashpal
#define ll long long
#define input for(int i=0;i<z;i++){int x;cin>>x;v.push_back(x);}
using namespace std;

int main()
{
ll n;cin>>n;
vector<ll>dp(n+1,-1);
dp[0]=1;
dp[1]=1;
for(int i=2;i<=n;i++){

dp[i]=dp[i-1]+dp[i-2];
}
cout<<dp[n];
    
    return 0;
}
*/

//------------------------------------------SPACE OPTIMISATION---------------------------------------------//

/*-----------TIME COMPLEXITY==O(N)--------------SPACE COMPLEXITY==O(1)---------------------

#include<bits/stdc++.h>
//yashpal
#define ll long long
#define input for(int i=0;i<z;i++){int x;cin>>x;v.push_back(x);}
using namespace std;

int main()
{
ll n;cin>>n;

ll prev1=1;
ll prev2=1;
for(int i=2;i<=n;i++){
ll curr=prev1+prev2;
prev1=prev2;
prev2=curr;
}
cout<<prev2;
    
    return 0;
}

*/
